var searchIndex = JSON.parse('{\
"grin_api":{"doc":"","i":[[0,"auth","grin_api","",null,null],[3,"MWC_BASIC_REALM","grin_api::auth","",null,null],[3,"MWC_FOREIGN_BASIC_REALM","","",null,null],[3,"BasicAuthMiddleware","","",null,null],[11,"new","","",0,[[["string",3],["option",4],["headervalue",3]],["basicauthmiddleware",3]]],[3,"BasicAuthURIMiddleware","","",null,null],[11,"new","","",1,[[["string",3],["headervalue",3]],["basicauthurimiddleware",3]]],[0,"client","grin_api","High level JSON/HTTP client API",null,null],[5,"get","grin_api::client","Helper function to easily issue a HTTP GET request …",null,[[["option",4],["string",3],["str",15]],[["result",4],["error",3]]]],[5,"get_async","","Helper function to easily issue an async HTTP GET request …",null,[[["option",4],["string",3],["str",15]]]],[5,"get_no_ret","","Helper function to easily issue a HTTP GET request on a …",null,[[["option",4],["string",3],["str",15]],[["error",3],["result",4]]]],[5,"post","","Helper function to easily issue a HTTP POST request with …",null,[[["option",4],["string",3],["str",15]],[["result",4],["error",3]]]],[5,"post_async","","Helper function to easily issue an async HTTP POST …",null,[[["option",4],["string",3],["str",15]]]],[5,"post_no_ret","","Helper function to easily issue a HTTP POST request with …",null,[[["option",4],["string",3],["str",15]],[["error",3],["result",4]]]],[5,"post_no_ret_async","","Helper function to easily issue an async HTTP POST …",null,[[["option",4],["string",3],["str",15]]]],[5,"create_post_request","","",null,[[["option",4],["string",3],["str",15]],[["error",3],["result",4],["request",3]]]],[5,"create_post_request_ex","","",null,[[["string",3],["option",4],["str",15]],[["error",3],["result",4],["request",3]]]],[5,"send_request","","",null,[[["body",3],["request",3]],[["result",4],["string",3],["error",3]]]],[3,"Foreign","grin_api","Main interface into all node API functions. Node APIs are …",null,null],[12,"peers","","",2,null],[12,"chain","","",2,null],[12,"tx_pool","","",2,null],[12,"sync_state","","",2,null],[8,"ForeignRpc","","Public definition used to generate Node jsonrpc api.",null,null],[10,"get_header","","Networked version of Foreign::get_header.",3,[[["string",3],["option",4],["u64",15],["option",4]],[["blockheaderprintable",3],["errorkind",4],["result",4]]]],[10,"get_block","","Networked version of Foreign::get_block.",3,[[["string",3],["option",4],["u64",15],["option",4]],[["result",4],["errorkind",4],["blockprintable",3]]]],[10,"get_block_ex","","Networked version with all parameters of …",3,[[["string",3],["option",4],["u64",15],["bool",15],["option",4],["option",4]],[["result",4],["errorkind",4],["blockprintable",3]]]],[10,"get_version","","Networked version of Foreign::get_version.",3,[[],[["errorkind",4],["version",3],["result",4]]]],[10,"get_tip","","Networked version of Foreign::get_tip.",3,[[],[["errorkind",4],["tip",3],["result",4]]]],[10,"get_kernel","","Networked version of Foreign::get_kernel.",3,[[["string",3],["option",4],["u64",15]],[["locatedtxkernel",3],["errorkind",4],["result",4]]]],[10,"get_outputs","","Networked version of Foreign::get_outputs.",3,[[["option",4],["option",4],["u64",15],["bool",15],["vec",3],["option",4]],[["errorkind",4],["result",4],["vec",3]]]],[10,"get_unspent_outputs","","Networked version of Foreign::get_unspent_outputs.",3,[[["option",4],["u64",15],["bool",15],["option",4]],[["outputlisting",3],["errorkind",4],["result",4]]]],[10,"get_pmmr_indices","","Networked version of Foreign::get_pmmr_indices.",3,[[["option",4],["u64",15]],[["outputlisting",3],["errorkind",4],["result",4]]]],[10,"get_pool_size","","Networked version of Foreign::get_pool_size.",3,[[],[["usize",15],["result",4],["errorkind",4]]]],[10,"get_stempool_size","","Networked version of Foreign::get_stempool_size.",3,[[],[["usize",15],["result",4],["errorkind",4]]]],[10,"get_unconfirmed_transactions","","Networked version of Foreign::get_unconfirmed_transactions…",3,[[],[["errorkind",4],["result",4],["vec",3]]]],[10,"push_transaction","","Networked version of Foreign::push_transaction.",3,[[["bool",15],["transaction",3],["option",4]],[["errorkind",4],["result",4]]]],[10,"get_libp2p_peers","","Networked version of Owner::get_libp2p_peers.",3,[[],[["errorkind",4],["result",4],["libp2ppeers",3]]]],[10,"get_libp2p_messages","","Networked version of Owner::get_libp2p_messages.",3,[[],[["libp2pmessages",3],["errorkind",4],["result",4]]]],[5,"node_apis","","Listener version, providing same API but listening for …",null,[[["string",3],["peers",3],["arc",3],["str",15],["arc",3],["tlsconfig",3],["rwlock",6],["syncstate",3],["arc",3],["arc",3],["chain",3],["stratumippool",3],["bool",15],["option",4],["arc",3],["option",4]],[["error",3],["result",4]]]],[3,"Owner","","Main interface into all node API functions. Node APIs are …",null,null],[12,"chain","","",4,null],[12,"peers","","",4,null],[12,"sync_state","","",4,null],[5,"get_server_onion_address","","",null,[[],[["option",4],["string",3]]]],[5,"reset_server_onion_address","","",null,[[]]],[5,"set_server_onion_address","","",null,[[["string",3]]]],[8,"OwnerRpc","","Public definition used to generate Node jsonrpc api.",null,null],[10,"get_status","","Networked version of Owner::get_status.",5,[[],[["errorkind",4],["status",3],["result",4]]]],[10,"validate_chain","","Networked version of Owner::validate_chain.",5,[[],[["errorkind",4],["result",4]]]],[10,"compact_chain","","Networked version of Owner::compact_chain.",5,[[],[["errorkind",4],["result",4]]]],[10,"get_peers","","Networked version of Owner::get_peers.",5,[[["option",4],["socketaddr",4]],[["result",4],["vec",3],["errorkind",4]]]],[10,"get_connected_peers","","Networked version of Owner::get_connected_peers.",5,[[],[["vec",3],["result",4],["errorkind",4]]]],[10,"ban_peer","","Networked version of Owner::ban_peer.",5,[[["socketaddr",4]],[["errorkind",4],["result",4]]]],[10,"unban_peer","","Networked version of Owner::unban_peer.",5,[[["socketaddr",4]],[["errorkind",4],["result",4]]]],[3,"Error","","Errors that can be returned by an ApiEndpoint …",null,null],[4,"ErrorKind","","",null,null],[13,"Internal","","",6,null],[13,"Argument","","",6,null],[13,"NotFound","","",6,null],[13,"RequestError","","",6,null],[13,"ResponseError","","",6,null],[13,"Router","","",6,null],[13,"P2pError","","",6,null],[3,"TLSConfig","","TLS config",null,null],[12,"certificate","","",7,null],[12,"private_key","","",7,null],[3,"ApiServer","","HTTP server allowing the registration of ApiEndpoint …",null,null],[3,"LoggingMiddleware","","",null,null],[6,"ResponseFuture","","",null,null],[8,"Handler","","",null,null],[11,"get","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"post","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"put","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"patch","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"delete","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"head","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"options","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"trace","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"connect","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"call","","",8,[[["body",3],["iterator",8],["request",3],["box",3]],["responsefuture",6]]],[4,"RouterError","","",null,null],[13,"RouteAlreadyExists","","",9,null],[13,"RouteNotFound","","",9,null],[13,"NoValue","","",9,null],[3,"Router","","",null,null],[6,"HandlerObj","","",null,null],[3,"Node","","",null,null],[5,"not_found","","",null,[[],["responsefuture",6]]],[3,"Version","","API Version Information",null,null],[12,"node_version","","Current node API Version (api crate version)",10,null],[12,"block_header_version","","Block header version",10,null],[3,"Tip","","The state of the current fork tip",null,null],[12,"height","","Height of the tip (max height of the fork)",11,null],[12,"last_block_pushed","","",11,null],[12,"prev_block_to_last","","",11,null],[12,"total_difficulty","","",11,null],[3,"Status","","Status page containing different server information",null,null],[12,"protocol_version","","",12,null],[12,"user_agent","","",12,null],[12,"connections","","",12,null],[12,"tip","","",12,null],[12,"sync_status","","",12,null],[12,"sync_info","","",12,null],[3,"TxHashSet","","TxHashSet",null,null],[12,"output_root_hash","","Output Root Hash",13,null],[12,"range_proof_root_hash","","",13,null],[12,"kernel_root_hash","","",13,null],[3,"TxHashSetNode","","Wrapper around a list of txhashset nodes, so it can be …",null,null],[12,"hash","","",14,null],[4,"OutputType","","",null,null],[13,"Coinbase","","",15,null],[13,"Transaction","","",15,null],[3,"Output","","",null,null],[12,"commit","","The output commitment representing the amount",16,null],[12,"height","","Height of the block which contains the output",16,null],[12,"mmr_index","","MMR Index of output",16,null],[3,"PrintableCommitment","","",null,null],[12,"commit","","",17,null],[3,"OutputPrintable","","",null,null],[12,"output_type","","The type of output Coinbase|Transaction",18,null],[12,"commit","","The homomorphic commitment representing the output\'s …",18,null],[12,"spent","","Whether the output has been spent",18,null],[12,"proof","","Rangeproof (as hex string)",18,null],[12,"proof_hash","","Rangeproof hash (as hex string)",18,null],[12,"block_height","","Block height at which the output is found",18,null],[12,"merkle_proof","","Merkle Proof",18,null],[12,"mmr_index","","MMR Position",18,null],[3,"TxKernelPrintable","","",null,null],[12,"features","","",19,null],[12,"fee","","",19,null],[12,"lock_height","","",19,null],[12,"excess","","",19,null],[12,"excess_sig","","",19,null],[3,"BlockHeaderInfo","","",null,null],[12,"hash","","",20,null],[12,"height","","Height of this block since the genesis block (height 0)",20,null],[12,"previous","","Hash of the block previous to this in the chain.",20,null],[3,"BlockHeaderPrintable","","",null,null],[12,"hash","","",21,null],[12,"version","","Version of the block",21,null],[12,"height","","Height of this block since the genesis block (height 0)",21,null],[12,"previous","","Hash of the block previous to this in the chain.",21,null],[12,"prev_root","","Root hash of the header MMR at the previous header.",21,null],[12,"timestamp","","rfc3339 timestamp at which the block was built.",21,null],[12,"output_root","","Merklish root of all the commitments in the TxHashSet",21,null],[12,"output_mmr_size","","Size of the output MMR",21,null],[12,"range_proof_root","","Merklish root of all range proofs in the TxHashSet",21,null],[12,"kernel_root","","Merklish root of all transaction kernels in the TxHashSet",21,null],[12,"kernel_mmr_size","","Size of the kernel MMR",21,null],[12,"nonce","","Nonce increment used to mine this block.",21,null],[12,"edge_bits","","Size of the cuckoo graph",21,null],[12,"cuckoo_solution","","Nonces of the cuckoo solution",21,null],[12,"total_difficulty","","Total accumulated difficulty since genesis block",21,null],[12,"secondary_scaling","","Variable difficulty scaling factor for secondary proof of …",21,null],[12,"total_kernel_offset","","Total kernel offset since genesis block",21,null],[3,"BlockPrintable","","",null,null],[12,"header","","The block header",22,null],[12,"inputs","","",22,null],[12,"outputs","","A printable version of the outputs",22,null],[12,"kernels","","A printable version of the transaction kernels",22,null],[3,"CompactBlockPrintable","","",null,null],[12,"header","","The block header",23,null],[12,"out_full","","Full outputs, specifically coinbase output(s)",23,null],[12,"kern_full","","Full kernels, specifically coinbase kernel(s)",23,null],[12,"kern_ids","","Kernels (hex short_ids)",23,null],[3,"BlockOutputs","","",null,null],[12,"header","","The block header",24,null],[12,"outputs","","A printable version of the outputs",24,null],[3,"OutputListing","","",null,null],[12,"highest_index","","The last available output index",25,null],[12,"last_retrieved_index","","The last insertion index retrieved",25,null],[12,"outputs","","A printable version of the outputs",25,null],[3,"LocatedTxKernel","","",null,null],[12,"tx_kernel","","",26,null],[12,"height","","",26,null],[12,"mmr_index","","",26,null],[3,"PoolInfo","","",null,null],[12,"pool_size","","Size of the pool",27,null],[3,"Libp2pPeers","","Libp2p peers from the node There are libp2p peers node  …",null,null],[12,"libp2p_peers","","Libp2p prres",28,null],[12,"node_peers","","Other nodes. There is a high chance that they are running …",28,null],[3,"Libp2pMessages","","Libp2p message from this node",null,null],[12,"current_time","","Libp2p peers",29,null],[12,"libp2p_messages","","Other nodes. There is a high chance that they are running …",29,null],[5,"parse_body","","Parse request body",null,[[["body",3],["request",3]]]],[5,"result_to_response","","Convert Result to ResponseFuture",null,[[["result",4],["error",3]],["responsefuture",6]]],[5,"json_response","","Utility to serialize a struct into JSON and produce a …",null,[[],["responsefuture",6]]],[5,"json_response_pretty","","Pretty-printed version of json response as future",null,[[],["responsefuture",6]]],[5,"just_response","","Text response as HTTP response",null,[[["body",3],["debug",8],["into",8],["statuscode",3]],[["body",3],["response",3]]]],[5,"response","","Text response as future",null,[[["body",3],["debug",8],["into",8],["statuscode",3]],["responsefuture",6]]],[3,"QueryParams","","",null,null],[14,"right_path_element","","",null,null],[14,"must_get_query","","",null,null],[14,"parse_param","","",null,null],[14,"parse_param_no_err","","",null,null],[14,"w_fut","","",null,null],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow_replacement","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","grin_api::auth","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow_replacement","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow_replacement","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow_replacement","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow_replacement","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","grin_api","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow_replacement","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow_replacement","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow_replacement","","",33,[[]]],[11,"as_fail","","",33,[[],["fail",8]]],[11,"vzip","","",33,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow_replacement","","",6,[[]]],[11,"clone_boxed","","",6,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",6,[[]]],[11,"clone_boxed","","",6,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",6,[[]]],[11,"as_fail","","",6,[[],["fail",8]]],[11,"vzip","","",6,[[]]],[11,"clone_any","","",6,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",6,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",6,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",6,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow_replacement","","",7,[[]]],[11,"clone_boxed","","",7,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",7,[[]]],[11,"clone_boxed","","",7,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"clone_any","","",7,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",7,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",7,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",7,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow_replacement","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow_replacement","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow_replacement","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",9,[[]]],[11,"as_fail","","",9,[[],["fail",8]]],[11,"vzip","","",9,[[]]],[11,"clone_any","","",9,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",9,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",9,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",9,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"equivalent","","",9,[[],["bool",15]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow_replacement","","",36,[[]]],[11,"clone_boxed","","",36,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",36,[[]]],[11,"clone_boxed","","",36,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"clone_any","","",36,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",36,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",36,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",36,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow_replacement","","",37,[[]]],[11,"clone_boxed","","",37,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",37,[[]]],[11,"clone_boxed","","",37,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"clone_any","","",37,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",37,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",37,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",37,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow_replacement","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"clone_any","","",10,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",10,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",10,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",10,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow_replacement","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"clone_any","","",11,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",11,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",11,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",11,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow_replacement","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"clone_any","","",12,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",12,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",12,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",12,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow_replacement","","",13,[[]]],[11,"clone_boxed","","",13,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",13,[[]]],[11,"clone_boxed","","",13,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"clone_any","","",13,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",13,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",13,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",13,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow_replacement","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",14,[[]]],[11,"clone_boxed","","",14,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"clone_any","","",14,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",14,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",14,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",14,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow_replacement","","",15,[[]]],[11,"clone_boxed","","",15,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",15,[[]]],[11,"clone_boxed","","",15,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"clone_any","","",15,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",15,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",15,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",15,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow_replacement","","",16,[[]]],[11,"clone_boxed","","",16,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",16,[[]]],[11,"clone_boxed","","",16,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"clone_any","","",16,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",16,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",16,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",16,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_hex","","",17,[[],["string",3]]],[11,"borrow_replacement","","",17,[[]]],[11,"clone_boxed","","",17,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",17,[[]]],[11,"clone_boxed","","",17,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"clone_any","","",17,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",17,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",17,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",17,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"protocol_name","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow_replacement","","",18,[[]]],[11,"clone_boxed","","",18,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",18,[[]]],[11,"clone_boxed","","",18,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"clone_any","","",18,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",18,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",18,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",18,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow_replacement","","",19,[[]]],[11,"clone_boxed","","",19,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",19,[[]]],[11,"clone_boxed","","",19,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"clone_any","","",19,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",19,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",19,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",19,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow_replacement","","",20,[[]]],[11,"clone_boxed","","",20,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",20,[[]]],[11,"clone_boxed","","",20,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"clone_any","","",20,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",20,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",20,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",20,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow_replacement","","",21,[[]]],[11,"clone_boxed","","",21,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",21,[[]]],[11,"clone_boxed","","",21,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"clone_any","","",21,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",21,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",21,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",21,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow_replacement","","",22,[[]]],[11,"clone_boxed","","",22,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",22,[[]]],[11,"clone_boxed","","",22,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"clone_any","","",22,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",22,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",22,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",22,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow_replacement","","",23,[[]]],[11,"clone_boxed","","",23,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",23,[[]]],[11,"clone_boxed","","",23,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"clone_any","","",23,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",23,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",23,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",23,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow_replacement","","",24,[[]]],[11,"clone_boxed","","",24,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",24,[[]]],[11,"clone_boxed","","",24,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"clone_any","","",24,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",24,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",24,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",24,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow_replacement","","",25,[[]]],[11,"clone_boxed","","",25,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",25,[[]]],[11,"clone_boxed","","",25,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"clone_any","","",25,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",25,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",25,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",25,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow_replacement","","",26,[[]]],[11,"clone_boxed","","",26,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",26,[[]]],[11,"clone_boxed","","",26,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"clone_any","","",26,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",26,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",26,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",26,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow_replacement","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow_replacement","","",28,[[]]],[11,"clone_boxed","","",28,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",28,[[]]],[11,"clone_boxed","","",28,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"clone_any","","",28,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",28,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",28,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",28,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow_replacement","","",29,[[]]],[11,"clone_boxed","","",29,[[],[["global",3],["defaultfeatures",8],["box",3]]]],[11,"self_address_mut","","",29,[[]]],[11,"clone_boxed","","",29,[[],[["global",3],["box",3],["nonsyncfeatures",8]]]],[11,"self_address_mut","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"clone_any","","",29,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",29,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_sync","","",29,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_send_sync","","",29,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"call","grin_api::auth","",0,[[["body",3],["iterator",8],["request",3],["box",3]],["responsefuture",6]]],[11,"call","","",1,[[["body",3],["iterator",8],["request",3],["box",3]],["responsefuture",6]]],[11,"call","grin_api","",35,[[["body",3],["iterator",8],["request",3],["box",3]],["responsefuture",6]]],[11,"get_header","","",2,[[["string",3],["option",4],["u64",15],["option",4]],[["blockheaderprintable",3],["errorkind",4],["result",4]]]],[11,"get_block","","",2,[[["string",3],["option",4],["u64",15],["option",4]],[["result",4],["errorkind",4],["blockprintable",3]]]],[11,"get_block_ex","","",2,[[["string",3],["option",4],["u64",15],["bool",15],["option",4],["option",4]],[["result",4],["errorkind",4],["blockprintable",3]]]],[11,"get_version","","",2,[[],[["errorkind",4],["version",3],["result",4]]]],[11,"get_tip","","",2,[[],[["errorkind",4],["tip",3],["result",4]]]],[11,"get_kernel","","",2,[[["string",3],["option",4],["u64",15]],[["locatedtxkernel",3],["errorkind",4],["result",4]]]],[11,"get_outputs","","",2,[[["option",4],["option",4],["u64",15],["bool",15],["vec",3],["option",4]],[["errorkind",4],["result",4],["vec",3]]]],[11,"get_unspent_outputs","","",2,[[["option",4],["u64",15],["bool",15],["option",4]],[["outputlisting",3],["errorkind",4],["result",4]]]],[11,"get_pmmr_indices","","",2,[[["option",4],["u64",15]],[["outputlisting",3],["errorkind",4],["result",4]]]],[11,"get_pool_size","","",2,[[],[["usize",15],["result",4],["errorkind",4]]]],[11,"get_stempool_size","","",2,[[],[["usize",15],["result",4],["errorkind",4]]]],[11,"get_unconfirmed_transactions","","",2,[[],[["errorkind",4],["result",4],["vec",3]]]],[11,"push_transaction","","",2,[[["bool",15],["transaction",3],["option",4]],[["errorkind",4],["result",4]]]],[11,"get_libp2p_peers","","",2,[[],[["errorkind",4],["result",4],["libp2ppeers",3]]]],[11,"get_libp2p_messages","","",2,[[],[["libp2pmessages",3],["errorkind",4],["result",4]]]],[11,"get_status","","",4,[[],[["errorkind",4],["status",3],["result",4]]]],[11,"validate_chain","","",4,[[],[["errorkind",4],["result",4]]]],[11,"compact_chain","","",4,[[],[["errorkind",4],["result",4]]]],[11,"get_peers","","",4,[[["option",4],["socketaddr",4]],[["result",4],["vec",3],["errorkind",4]]]],[11,"get_connected_peers","","",4,[[],[["vec",3],["result",4],["errorkind",4]]]],[11,"ban_peer","","",4,[[["socketaddr",4]],[["errorkind",4],["result",4]]]],[11,"unban_peer","","",4,[[["socketaddr",4]],[["errorkind",4],["result",4]]]],[11,"as_ref","","",17,[[]]],[11,"from","","",30,[[["str",15]]]],[11,"from","","",30,[[["option",4],["str",15]]]],[11,"from","","",30,[[["body",3],["request",3]]]],[11,"from","","",33,[[["errorkind",4]],["error",3]]],[11,"from","","",33,[[["context",3],["errorkind",4]],["error",3]]],[11,"from","","",33,[[["routererror",4]],["error",3]]],[11,"from","","",33,[[["error",3]],["error",3]]],[11,"from","","",33,[[["p2perror",4]],["error",3]]],[11,"clone","","",6,[[],["errorkind",4]]],[11,"clone","","",7,[[],["tlsconfig",3]]],[11,"clone","","",9,[[],["routererror",4]]],[11,"clone","","",36,[[],["router",3]]],[11,"clone","","",37,[[],["node",3]]],[11,"clone","","",10,[[],["version",3]]],[11,"clone","","",11,[[],["tip",3]]],[11,"clone","","",12,[[],["status",3]]],[11,"clone","","",13,[[],["txhashset",3]]],[11,"clone","","",14,[[],["txhashsetnode",3]]],[11,"clone","","",15,[[],["outputtype",4]]],[11,"clone","","",16,[[],["output",3]]],[11,"clone","","",17,[[],["printablecommitment",3]]],[11,"clone","","",18,[[],["outputprintable",3]]],[11,"clone","","",19,[[],["txkernelprintable",3]]],[11,"clone","","",20,[[],["blockheaderinfo",3]]],[11,"clone","","",21,[[],["blockheaderprintable",3]]],[11,"clone","","",22,[[],["blockprintable",3]]],[11,"clone","","",23,[[],["compactblockprintable",3]]],[11,"clone","","",24,[[],["blockoutputs",3]]],[11,"clone","","",25,[[],["outputlisting",3]]],[11,"clone","","",26,[[],["locatedtxkernel",3]]],[11,"clone","","",28,[[],["libp2ppeers",3]]],[11,"clone","","",29,[[],["libp2pmessages",3]]],[11,"eq","","",6,[[["errorkind",4]],["bool",15]]],[11,"ne","","",6,[[["errorkind",4]],["bool",15]]],[11,"eq","","",9,[[["routererror",4]],["bool",15]]],[11,"ne","","",9,[[["routererror",4]],["bool",15]]],[11,"deref","grin_api::auth","",31,[[],["headervalue",3]]],[11,"deref","","",32,[[],["headervalue",3]]],[11,"fmt","grin_api","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"initialize","grin_api::auth","",31,[[]]],[11,"initialize","","",32,[[]]],[11,"serialize","grin_api","",6,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"name","","",6,[[],[["option",4],["str",15]]]],[11,"cause","","",6,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",6,[[],[["backtrace",3],["option",4]]]],[11,"cause","","",33,[[],[["option",4],["fail",8]]]],[11,"backtrace","","",33,[[],[["backtrace",3],["option",4]]]],[11,"name","","",9,[[],[["option",4],["str",15]]]],[11,"cause","","",9,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",9,[[],[["backtrace",3],["option",4]]]],[11,"poll_ready","","",36,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",36,[[["body",3],["request",3]]]],[11,"handle","","",3,[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]]],[11,"handle","","",5,[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]]],[11,"process_multival_param","","",30,[[["str",15]]]],[11,"get","","",30,[[["str",15]],[["string",3],["option",4]]]],[11,"new","","Create a new API instance with the chain, transaction …",2,[[["weak",3],["weak",3],["chain",3],["peers",3],["syncstate",3],["weak",3],["rwlock",6],["weak",3]]]],[11,"get_header","","Gets block header given either a height, a hash or an …",2,[[["option",4],["option",4],["u64",15],["string",3],["option",4],["hash",3]],[["blockheaderprintable",3],["error",3],["result",4]]]],[11,"get_block","","Gets block details given either a height, a hash or an …",2,[[["string",3],["u64",15],["bool",15],["option",4],["option",4],["option",4],["option",4],["hash",3]],[["result",4],["error",3],["blockprintable",3]]]],[11,"get_version","","Returns the node version and block header version (used …",2,[[],[["result",4],["version",3],["error",3]]]],[11,"get_tip","","Returns details about the state of the current fork tip.",2,[[],[["result",4],["tip",3],["error",3]]]],[11,"get_kernel","","Returns a <code>LocatedTxKernel</code> based on the kernel excess. The …",2,[[["string",3],["option",4],["u64",15]],[["error",3],["result",4],["locatedtxkernel",3]]]],[11,"get_outputs","","Retrieves details about specifics outputs. Supports …",2,[[["option",4],["option",4],["u64",15],["bool",15],["vec",3],["option",4]],[["vec",3],["error",3],["result",4]]]],[11,"get_unspent_outputs","","UTXO traversal. Retrieves last utxos since a <code>start_index</code> …",2,[[["option",4],["u64",15],["bool",15],["option",4]],[["outputlisting",3],["result",4],["error",3]]]],[11,"get_pmmr_indices","","Retrieves the PMMR indices based on the provided block …",2,[[["option",4],["u64",15]],[["outputlisting",3],["result",4],["error",3]]]],[11,"get_pool_size","","Returns the number of transaction in the transaction pool.",2,[[],[["usize",15],["error",3],["result",4]]]],[11,"get_stempool_size","","Returns the number of transaction in the stem transaction …",2,[[],[["usize",15],["error",3],["result",4]]]],[11,"get_unconfirmed_transactions","","Returns the unconfirmed transactions in the transaction …",2,[[],[["result",4],["vec",3],["error",3]]]],[11,"push_transaction","","Push new transaction to our local transaction pool.",2,[[["bool",15],["transaction",3],["option",4]],[["error",3],["result",4]]]],[11,"get_libp2p_peers","","Get TOR address on this node. Return none if TOR is not …",2,[[],[["error",3],["result",4],["libp2ppeers",3]]]],[11,"get_libp2p_messages","","",2,[[],[["result",4],["libp2pmessages",3],["error",3]]]],[11,"new","","Create a new API instance with the chain, transaction …",4,[[["weak",3],["weak",3],["chain",3],["syncstate",3],["weak",3],["peers",3]]]],[11,"get_status","","Returns various information about the node, the network …",4,[[],[["error",3],["result",4],["status",3]]]],[11,"validate_chain","","Trigger a validation of the chain state.",4,[[],[["error",3],["result",4]]]],[11,"compact_chain","","Trigger a compaction of the chain state to regain storage …",4,[[],[["error",3],["result",4]]]],[11,"get_peers","","Retrieves information about stored peers. If <code>None</code> is …",4,[[["option",4],["socketaddr",4]],[["vec",3],["error",3],["result",4]]]],[11,"get_connected_peers","","Retrieves a list of all connected peers.",4,[[],[["vec",3],["result",4],["error",3]]]],[11,"ban_peer","","Bans a specific peer.",4,[[["socketaddr",4]],[["error",3],["result",4]]]],[11,"unban_peer","","Unbans a specific peer.",4,[[["socketaddr",4]],[["error",3],["result",4]]]],[11,"kind","","",33,[[],["errorkind",4]]],[11,"new","","",7,[[["string",3]],["tlsconfig",3]]],[11,"build_server_config","","",7,[[],[["error",3],["result",4],["arc",3]]]],[11,"new","","Creates a new ApiServer that will serve ApiEndpoint …",34,[[],["apiserver",3]]],[11,"start","","Starts ApiServer at the provided address. TODO support …",34,[[["option",4],["tlsconfig",3],["socketaddr",4],["router",3]],[["error",3],["result",4],["joinhandle",3]]]],[11,"stop","","Stops the API server, it panics in case of error",34,[[],["bool",15]]],[11,"get","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"post","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"put","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"patch","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"delete","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"head","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"options","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"trace","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"connect","","",8,[[["body",3],["request",3]],["responsefuture",6]]],[11,"call","","",8,[[["body",3],["iterator",8],["request",3],["box",3]],["responsefuture",6]]],[11,"new","","",36,[[],["router",3]]],[11,"add_middleware","","",36,[[["handlerobj",6]]]],[11,"add_route","","",36,[[["handlerobj",6],["str",15]],[["result",4],["routererror",4],["node",3]]]],[11,"get","","",36,[[["str",15]],[["routererror",4],["result",4]]]],[11,"add_middleware","","",37,[[["handlerobj",6]],["node",3]]],[11,"from_tip","","",11,[[["tip",3]],["tip",3]]],[11,"from_tip_and_peers","","",12,[[["u32",15],["string",3],["option",4],["value",4],["tip",3]],["status",3]]],[11,"from_head","","A TxHashSet in the context of the api is simply the …",13,[[["chain",3]],[["txhashset",3],["result",4],["error",3]]]],[11,"get_last_n_output","","",14,[[["chain",3],["u64",15]],[["vec",3],["txhashsetnode",3]]]],[11,"get_last_n_rangeproof","","",14,[[["chain",3],["u64",15]],[["vec",3],["txhashsetnode",3]]]],[11,"get_last_n_kernel","","",14,[[["chain",3],["u64",15]],[["vec",3],["txhashsetnode",3]]]],[11,"new","","",16,[[["commitment",3],["u64",15]],["output",3]]],[11,"commit","","",17,[[],["commitment",3]]],[11,"to_vec","","",17,[[],[["vec",3],["u8",15]]]],[11,"from_output","","",18,[[["option",4],["blockheader",3],["bool",15],["chain",3],["output",3]],[["outputprintable",3],["result",4],["error",3]]]],[11,"commit","","",18,[[],[["error",4],["result",4],["commitment",3]]]],[11,"range_proof","","",18,[[],[["rangeproof",3],["result",4],["error",4]]]],[11,"from_txkernel","","",19,[[["txkernel",3]],["txkernelprintable",3]]],[11,"from_header","","",20,[[["blockheader",3]],["blockheaderinfo",3]]],[11,"from_header","","",21,[[["blockheader",3]],["blockheaderprintable",3]]],[11,"from_block","","",22,[[["block",3],["chain",3],["bool",15]],[["result",4],["error",3],["blockprintable",3]]]],[11,"from_compact_block","","Convert a compact block into a printable representation …",23,[[["chain",3],["compactblock",3]],[["compactblockprintable",3],["error",3],["result",4]]]]],"p":[[3,"BasicAuthMiddleware"],[3,"BasicAuthURIMiddleware"],[3,"Foreign"],[8,"ForeignRpc"],[3,"Owner"],[8,"OwnerRpc"],[4,"ErrorKind"],[3,"TLSConfig"],[8,"Handler"],[4,"RouterError"],[3,"Version"],[3,"Tip"],[3,"Status"],[3,"TxHashSet"],[3,"TxHashSetNode"],[4,"OutputType"],[3,"Output"],[3,"PrintableCommitment"],[3,"OutputPrintable"],[3,"TxKernelPrintable"],[3,"BlockHeaderInfo"],[3,"BlockHeaderPrintable"],[3,"BlockPrintable"],[3,"CompactBlockPrintable"],[3,"BlockOutputs"],[3,"OutputListing"],[3,"LocatedTxKernel"],[3,"PoolInfo"],[3,"Libp2pPeers"],[3,"Libp2pMessages"],[3,"QueryParams"],[3,"MWC_BASIC_REALM"],[3,"MWC_FOREIGN_BASIC_REALM"],[3,"Error"],[3,"ApiServer"],[3,"LoggingMiddleware"],[3,"Router"],[3,"Node"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);