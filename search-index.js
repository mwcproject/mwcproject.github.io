var searchIndex = JSON.parse('{\
"grin_wallet_api":{"doc":"Higher level wallet functions which can be used by â€¦","t":[3,12,12,6,4,13,13,13,13,13,8,10,10,10,10,10,10,10,10,3,12,12,12,12,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,5,5,3,12,3,12,12,12,12,3,12,12,12,3,12,12,12,4,13,13,3,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Foreign","wallet_inst","doctest_mode","ForeignCheckMiddleware","ForeignCheckMiddlewareFn","CheckVersion","BuildCoinbase","VerifySlateMessages","ReceiveTx","FinalizeInvoiceTx","ForeignRpc","check_version","get_proof_address","build_coinbase","verify_slate_messages","receive_tx","finalize_invoice_tx","receive_swap_message","marketplace_message","Owner","wallet_inst","doctest_mode","shared_key","updater_running","OwnerRpcV2","accounts","create_account_path","set_active_account","retrieve_outputs","retrieve_txs","retrieve_summary_info","init_send_tx","issue_invoice_tx","process_invoice_tx","tx_lock_outputs","finalize_tx","post_tx","cancel_tx","get_stored_tx","verify_slate_messages","scan","node_height","start_updater","stop_updater","get_updater_messages","get_mqs_address","get_wallet_public_address","retrieve_payment_proof","verify_payment_proof","encode_slatepack_message","decode_slatepack_message","OwnerRpcV3","accounts","create_account_path","set_active_account","retrieve_outputs","retrieve_txs","retrieve_summary_info","init_send_tx","issue_invoice_tx","process_invoice_tx","tx_lock_outputs","finalize_tx","post_tx","cancel_tx","get_stored_tx","verify_slate_messages","scan","node_height","init_secure_api","get_top_level_directory","set_top_level_directory","create_config","create_wallet","open_wallet","close_wallet","get_mnemonic","change_password","delete_wallet","start_updater","stop_updater","get_updater_messages","get_mqs_address","get_wallet_public_address","retrieve_payment_proof","verify_payment_proof","set_tor_config","encode_slatepack_message","decode_slatepack_message","foreign_rpc_client","run_doctest_foreign","run_doctest_owner","ECDHPubkey","ecdh_pubkey","EncryptedRequest","jsonrpc","method","id","params","EncryptedResponse","jsonrpc","id","result","EncryptionErrorResponse","jsonrpc","id","error","JsonId","IntId","StrId","PubAddress","address","Token","keychain_mask","from","into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","vzip","init","deref","deref_mut","drop","try_into","from","into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","vzip","init","deref","deref_mut","drop","try_into","from","into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","vzip","init","deref","deref_mut","drop","try_into","from","into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","vzip","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow_replacement","clone_boxed","self_address_mut","clone_boxed","self_address_mut","vzip","clone_any","clone_any_send","clone_any_sync","clone_any_send_sync","init","deref","deref_mut","drop","try_into","check_version","get_proof_address","build_coinbase","verify_slate_messages","receive_tx","finalize_invoice_tx","receive_swap_message","marketplace_message","accounts","create_account_path","set_active_account","retrieve_outputs","retrieve_txs","retrieve_summary_info","init_send_tx","issue_invoice_tx","process_invoice_tx","finalize_tx","tx_lock_outputs","cancel_tx","get_stored_tx","post_tx","verify_slate_messages","scan","node_height","start_updater","stop_updater","get_updater_messages","get_mqs_address","get_wallet_public_address","retrieve_payment_proof","verify_payment_proof","encode_slatepack_message","decode_slatepack_message","accounts","create_account_path","set_active_account","retrieve_outputs","retrieve_txs","retrieve_summary_info","init_send_tx","issue_invoice_tx","process_invoice_tx","finalize_tx","tx_lock_outputs","cancel_tx","get_stored_tx","post_tx","verify_slate_messages","scan","node_height","init_secure_api","get_top_level_directory","set_top_level_directory","create_config","create_wallet","open_wallet","close_wallet","get_mnemonic","change_password","delete_wallet","start_updater","stop_updater","get_updater_messages","get_mqs_address","get_wallet_public_address","retrieve_payment_proof","verify_payment_proof","set_tor_config","encode_slatepack_message","decode_slatepack_message","drop","clone","clone","clone","clone","clone","clone","clone","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","handle","handle","handle","new","check_version","get_proof_address","build_coinbase","verify_slate_messages","receive_tx","finalize_invoice_tx","receive_swap_message","marketplace_message","decrypt_slate","encrypt_slate","check_version","get_proof_address","build_coinbase","verify_slate_messages","receive_tx","finalize_invoice_tx","receive_swap_message","marketplace_message","new","set_tor_config","accounts","create_account_path","set_active_account","retrieve_outputs","retrieve_txs","retrieve_summary_info","init_send_tx","issue_invoice_tx","process_invoice_tx","tx_lock_outputs","finalize_tx","post_tx","cancel_tx","get_stored_tx","load_stored_tx","verify_slate_messages","scan","dump_wallet_data","node_height","get_top_level_directory","set_top_level_directory","create_config","create_wallet","open_wallet","close_wallet","get_mnemonic","change_password","delete_wallet","start_updater","stop_updater","get_updater_messages","get_mqs_address","get_wallet_public_address","retrieve_payment_proof","get_stored_tx_proof","verify_payment_proof","swap_start","swap_create_from_offer","swap_list","swap_delete","swap_get","swap_adjust","swap_dump","update_swap_status_action","get_swap_tx_tstatus","swap_process","swap_income_message","decrypt_versioned_slate","decrypt_slatepack","encrypt_slate","from_json","as_json_value","as_json_str","decrypt","from_json","as_json_value","as_json_str","decrypt","new","as_json_value"],"q":["grin_wallet_apid":["Main interface into all wallet API functions. Wallet APIs â€¦","Wallet instance","Flag to normalize some output during testing. Can mostly â€¦","ForeignAPI Middleware Check callback","Middleware Identifiers for each function","check_version","build_coinbase","verify_slate_messages","receive_tx","finalize_invoice_tx","Public definition used to generate Foreign jsonrpc api.","Networked version of Foreign::check_version.","Networked version of Foreign::check_version.","Networked Legacy (non-secure token) version of â€¦","Networked version of Foreign::verify_slate_messages.","Networked version of Foreign::receive_tx.","Networked version of Foreign::finalize_invoice_tx.","Networked version of Foreign::receive_swap_message.","Networked version of Foreign::marketplace_message.","Main interface into all wallet API functions. Wallet APIs â€¦","contain all methods to manage the wallet","Flag to normalize some output during testing. Can mostly â€¦","Share ECDH key","Stop state for update thread","Public definition used to generate Owner jsonrpc api.","Networked version of Owner::accounts.","Networked version of Owner::create_account_path.","Networked version of Owner::set_active_account.","Networked version of Owner::retrieve_outputs.","Networked version of Owner::retrieve_txs.","Networked version of Owner::retrieve_summary_info.","Networked version of Owner::init_send_tx.","Networked version of Owner::issue_invoice_tx.","Networked version of Owner::process_invoice_tx.","Networked version of Owner::tx_lock_outputs.","Networked version of Owner::finalize_tx.","Networked version of Owner::post_tx.","Networked version of Owner::cancel_tx.","Networked version of Owner::get_stored_tx.","Networked version of Owner::verify_slate_messages.","Networked version of Owner::scan.","Networked version of Owner::node_height.","Networked version of Owner::start_updated.","Networked version of Owner::stop_updater.","Networked version of Owner::get_updater_messages.","Networked version of Owner::get_mqs_address.","Networked version of Owner::get_wallet_public_address.","Networked version of Owner::retrieve_payment_proof.","Networked version of Owner::verify_payment_proof.","Networked version of Owner::encode_slatepack_message.","Networked version of Owner::decode_slatepack_message.","Public definition used to generate Owner jsonrpc api. â€¦","Networked version of Owner::accounts.","Networked version of Owner::create_account_path.","Networked version of Owner::set_active_account.","Networked version of Owner::retrieve_outputs.","Networked version of Owner::retrieve_txs.","Networked version of Owner::retrieve_summary_info.","Networked version of Owner::init_send_tx.","Networked version of Owner::issue_invoice_tx.","Networked version of Owner::process_invoice_tx.","Networked version of Owner::tx_lock_outputs.","Networked version of Owner::finalize_tx.","Networked version of Owner::post_tx.","Networked version of Owner::cancel_tx.","Networked version of Owner::get_stored_tx.","Networked version of Owner::verify_slate_messages.","Networked version of Owner::scan.","Networked version of Owner::node_height.","Initializes the secure JSON-RPC API. This function must â€¦","Networked version of Owner::get_top_level_directory.","Networked version of Owner::set_top_level_directory.","Networked version of Owner::create_config.","Networked version of Owner::create_wallet.","Networked version of Owner::open_wallet.","Networked version of Owner::close_wallet.","Networked version of Owner::get_mnemonic.","Networked version of Owner::change_password.","Networked version of Owner::delete_wallet.","Networked version of Owner::start_updated.","Networked version of Owner::stop_updater.","Networked version of Owner::get_updater_messages.","Networked version of Owner::get_mqs_address.","Networked version of Owner::get_wallet_public_address.","Networked version of Owner::retrieve_payment_proof.","Networked version of Owner::verify_payment_proof.","Networked version of Owner::set_tor_config.","Networked version of Owner::encode_slatepack_message.","Networked version of Owner::decode_slatepack_message.","Helper module for jsonrpc clients. Automatically â€¦","helper to set up a real environment to run integrated â€¦","helper to set up a real environment to run integrated â€¦","Wrapper for ECDH Public keys","public key, flattened","Wrapper for secure JSON requests","JSON RPC response","method","id","Body params, which includes nonce and encrypted request","Wrapper for secure JSON requests","JSON RPC response","id","result","Wrapper for encryption error responses","JSON RPC response","id","error","Represents a compliant JSON RPC 2.0 id. Valid id: â€¦","Integer Id","String Id","Wrapper for dalek public keys, used as addresses","Public address","Wrapper for API Tokens","Token to XOR mask against the stored wallet seede have a start_updater_log_thread running in the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new API instance with the given wallet instance. â€¦","Return the version capabilities of the running ForeignApi â€¦","Return the tor proof address","Builds a new unconfirmed coinbase output in the wallet, â€¦","Verifies all messages in the slate match their public â€¦","Recieve a tranaction created by another party, returning â€¦","Finalizes an invoice transaction initiated by this walletâ€¦","","","","","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Request generator for jsonrpc clients. Automatically â€¦","Create a new API instance with the given wallet instance. â€¦","Set the TOR configuration for this instance of the â€¦","Returns a list of accounts stored in the wallet (i.e. â€¦","Creates a new â€˜accountâ€™, which is a mapping of a â€¦","Sets the walletâ€™s currently active account. This sets â€¦","Returns a list of outputs from the active account in the â€¦","Returns a list of Transaction Log Entries from the active â€¦","Returns summary information from the active account in â€¦","Initiates a new transaction as the sender, creating a new â€¦","Issues a new invoice transaction slate, essentially a â€¦","Processes an invoice tranaction created by another party, â€¦","Locks the outputs associated with the inputs to the â€¦","Finalizes a transaction, after all parties have filled in â€¦","Posts a completed transaction to the listening node for â€¦","Cancels a transaction. This entails:","Retrieves the stored transaction associated with a â€¦","Loads a stored transaction from a file","Verifies all messages in the slate match their public â€¦","Scans the entire UTXO set from the node, identify which â€¦","Dump wallet data (outputs,transactions) into the logs","Retrieves the last known height known by the wallet. This â€¦","Retrieve the top-level directory for the wallet. This â€¦","Set the top-level directory for the wallet. This â€¦","Create a <code>mwc-wallet.toml</code> configuration file in the â€¦","Creates a new wallet seed and empty wallet database in â€¦","<code>Opens</code> a wallet, populating the internal keychain with the â€¦","<code>Close</code> a wallet, removing the master seed from memory.","Return the BIP39 mnemonic for the given wallet. This â€¦","Changes a walletâ€™s password, meaning the old seed file â€¦","Deletes a wallet, removing the config file, seed file and â€¦","Starts a background wallet update thread, which performs â€¦","Stops the background update thread. If the updater is â€¦","Retrieve messages from the updater thread, up to <code>count</code> â€¦","Retrieve the MQS address associated with the wallet. This â€¦","Retrieve the Tor or wallet public address associated with â€¦","Returns a single, exportable PaymentProof from a â€¦","","Verifies a PaymentProof This process entails:","Start swap trade process. Return SwapID that can be used â€¦","","List all available swap operations. SwapId & Status","Delete swap trade","Retrieve swap trade","Adjust the sate of swap trade. method & destination â€¦","Dump swap file content","Refresh and get a status and current expected action for â€¦","Get a status of the transactions that involved into the â€¦","","Process swap income message","","","","from json","return serialize JSON self","return serialized JSON self as string","Return decrypted body","from json","return serialize JSON self","return serialized JSON self as string","Return decrypted body","Create new response","return serialized JSON self"],"i":[0,1,1,0,0,2,2,2,2,2,0,3,3,3,3,3,3,3,3,0,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,7,0,8,8,8,8,0,9,9,9,0,10,10,10,0,11,11,0,12,0,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,11,13,12,7,8,9,10,11,11,11,13,12,7,8,9,10,11,13,12,7,8,9,10,11,13,12,7,8,9,10,3,5,6,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8,8,8,8,9,9,9,9,10,10],"f":[null,null,null,null,null,null,null,null,null,null,null,[[],[["versioninfo",3],["errorkind",4],["result",4]]],[[],[["string",3],["errorkind",4],["result",4]]],[[["blockfees",3]],[["versionedcoinbase",4],["errorkind",4],["result",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4]]],[[["versionedslate",4],["string",3],["option",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["string",3]],[["string",3],["errorkind",4],["result",4]]],null,null,null,null,null,null,[[],[["errorkind",4],["result",4],["vec",3]]],[[["string",3]],[["errorkind",4],["identifier",3],["result",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["bool",15],["u32",15],["option",4]],[["errorkind",4],["result",4]]],[[["u32",15],["option",4],["bool",15],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["bool",15],["u64",15]],[["errorkind",4],["result",4]]],[[["inittxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["issueinvoicetxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["inittxargs",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["usize",15],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["bool",15],["transactionv3",3]],[["errorkind",4],["result",4]]],[[["u32",15],["option",4],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["txlogentryapi",3]],[["errorkind",4],["result",4],["option",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4]]],[[["option",4],["bool",15],["u64",15]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4],["nodeheightresult",3]]],[[["u32",15]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4]]],[[["u32",15]],[["errorkind",4],["vec",3],["result",4]]],[[],[["result",4],["errorkind",4],["provableaddress",3]]],[[],[["result",4],["errorkind",4],["provableaddress",3]]],[[["u32",15],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["errorkind",4],["paymentproof",3]]],[[["paymentproof",3]],[["errorkind",4],["result",4]]],[[["u32",15],["provableaddress",3],["versionedslate",4],["option",4],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["string",3],["u32",15],["option",4]],[["result",4],["errorkind",4],["slatepackinfo",3]]],null,[[["token",3]],[["errorkind",4],["result",4],["vec",3]]],[[["string",3],["token",3]],[["errorkind",4],["identifier",3],["result",4]]],[[["string",3],["token",3]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["bool",15]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["bool",15],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["bool",15],["token",3],["u64",15]],[["errorkind",4],["result",4]]],[[["token",3],["inittxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["issueinvoicetxargs",3],["token",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["token",3],["inittxargs",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["usize",15],["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["bool",15],["token",3],["transactionv3",3]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["token",3],["txlogentryapi",3]],[["errorkind",4],["result",4],["option",4]]],[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["option",4],["token",3],["u64",15],["bool",15]],[["errorkind",4],["result",4]]],[[["token",3]],[["errorkind",4],["result",4],["nodeheightresult",3]]],[[["ecdhpubkey",3]],[["ecdhpubkey",3],["errorkind",4],["result",4]]],[[],[["string",3],["errorkind",4],["result",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["option",4],["chaintypes",4],["option",4],["mqsconfig",3],["loggingconfig",3],["walletconfig",3],["option",4],["option",4],["torconfig",3]],[["errorkind",4],["result",4]]],[[["u32",15],["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["token",3],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4]]],[[["u32",15]],[["errorkind",4],["vec",3],["result",4]]],[[["token",3]],[["result",4],["errorkind",4],["provableaddress",3]]],[[["token",3]],[["result",4],["errorkind",4],["provableaddress",3]]],[[["u32",15],["token",3],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["errorkind",4],["paymentproof",3]]],[[["token",3],["paymentproof",3]],[["errorkind",4],["result",4]]],[[["option",4],["torconfig",3]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["provableaddress",3],["versionedslate",4],["option",4],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["string",3]],[["result",4],["errorkind",4],["slatepackinfo",3]]],null,[[["value",4],["u64",15],["bool",15],["str",15]],[["string",3],["result",4],["option",4]]],[[["value",4],["u64",15],["bool",15],["str",15]],[["string",3],["result",4],["option",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["box",3],["global",3],["defaultfeatures",8]]],[[]],[[],[["nonsyncfeatures",8],["box",3],["global",3]]],[[]],[[]],[[],[["cloneany",8],["global",3],["box",3]]],[[],[["cloneany",8],["box",3],["global",3]]],[[],[["global",3],["box",3],["cloneany",8]]],[[],[["box",3],["cloneany",8],["global",3]]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],[["versioninfo",3],["errorkind",4],["result",4]]],[[],[["string",3],["errorkind",4],["result",4]]],[[["blockfees",3]],[["versionedcoinbase",4],["errorkind",4],["result",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4]]],[[["versionedslate",4],["string",3],["option",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["string",3]],[["string",3],["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4],["vec",3]]],[[["string",3]],[["errorkind",4],["identifier",3],["result",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["bool",15],["u32",15],["option",4]],[["errorkind",4],["result",4]]],[[["u32",15],["option",4],["bool",15],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["bool",15],["u64",15]],[["errorkind",4],["result",4]]],[[["inittxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["issueinvoicetxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["inittxargs",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["usize",15],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["u32",15],["option",4],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["txlogentryapi",3]],[["errorkind",4],["result",4],["option",4]]],[[["bool",15],["transactionv3",3]],[["errorkind",4],["result",4]]],[[["versionedslate",4]],[["errorkind",4],["result",4]]],[[["option",4],["bool",15],["u64",15]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4],["nodeheightresult",3]]],[[["u32",15]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4]]],[[["u32",15]],[["errorkind",4],["vec",3],["result",4]]],[[],[["result",4],["errorkind",4],["provableaddress",3]]],[[],[["result",4],["errorkind",4],["provableaddress",3]]],[[["u32",15],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["errorkind",4],["paymentproof",3]]],[[["paymentproof",3]],[["errorkind",4],["result",4]]],[[["u32",15],["provableaddress",3],["versionedslate",4],["option",4],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["string",3],["u32",15],["option",4]],[["result",4],["errorkind",4],["slatepackinfo",3]]],[[["token",3]],[["errorkind",4],["result",4],["vec",3]]],[[["string",3],["token",3]],[["errorkind",4],["identifier",3],["result",4]]],[[["string",3],["token",3]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["bool",15]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["bool",15],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["bool",15],["token",3],["u64",15]],[["errorkind",4],["result",4]]],[[["token",3],["inittxargs",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["issueinvoicetxargs",3],["token",3]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["token",3],["inittxargs",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4],["versionedslate",4]]],[[["usize",15],["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["option",4],["uuid",3]],[["errorkind",4],["result",4]]],[[["token",3],["txlogentryapi",3]],[["errorkind",4],["result",4],["option",4]]],[[["bool",15],["token",3],["transactionv3",3]],[["errorkind",4],["result",4]]],[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]],[[["option",4],["token",3],["u64",15],["bool",15]],[["errorkind",4],["result",4]]],[[["token",3]],[["errorkind",4],["result",4],["nodeheightresult",3]]],[[["ecdhpubkey",3]],[["ecdhpubkey",3],["errorkind",4],["result",4]]],[[],[["string",3],["errorkind",4],["result",4]]],[[["string",3]],[["errorkind",4],["result",4]]],[[["option",4],["chaintypes",4],["option",4],["mqsconfig",3],["loggingconfig",3],["walletconfig",3],["option",4],["option",4],["torconfig",3]],[["errorkind",4],["result",4]]],[[["u32",15],["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["token",3],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["string",3],["option",4]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3]],[["errorkind",4],["result",4]]],[[],[["errorkind",4],["result",4]]],[[["u32",15]],[["errorkind",4],["vec",3],["result",4]]],[[["token",3]],[["result",4],["errorkind",4],["provableaddress",3]]],[[["token",3]],[["result",4],["errorkind",4],["provableaddress",3]]],[[["u32",15],["token",3],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["errorkind",4],["paymentproof",3]]],[[["token",3],["paymentproof",3]],[["errorkind",4],["result",4]]],[[["option",4],["torconfig",3]],[["errorkind",4],["result",4]]],[[["u32",15],["token",3],["provableaddress",3],["versionedslate",4],["option",4],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]],[[["u32",15],["token",3],["option",4],["string",3]],[["result",4],["errorkind",4],["slatepackinfo",3]]],[[]],[[],["jsonid",4]],[[],["token",3]],[[],["pubaddress",3]],[[],["ecdhpubkey",3]],[[],["encryptedrequest",3]],[[],["encryptedresponse",3]],[[],["encryptionerrorresponse",3]],[[["jsonid",4]],["bool",15]],[[["jsonid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]],[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]],[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]],[[["option",4],["option",4],["mutex",6],["arc",3],["secretkey",3],["foreigncheckmiddleware",6]]],[[],[["versioninfo",3],["error",3],["result",4]]],[[],[["result",4],["string",3],["error",3]]],[[["blockfees",3]],[["result",4],["error",3],["cbdata",3]]],[[["slate",3]],[["result",4],["error",3]]],[[["slate",3],["string",3],["option",4],["option",4],["str",15]],[["slate",3],["error",3],["result",4]]],[[["slate",3]],[["slate",3],["error",3],["result",4]]],[[["string",3]],[["result",4],["error",3]]],[[["string",3]],[["result",4],["string",3],["error",3]]],[[["versionedslate",4]],[["error",3],["result",4]]],[[["u32",15],["slate",3],["option",4],["bool",15],["option",4],["slateversion",4],["option",4],["slatepurpose",4],["dalekpublickey",3]],[["result",4],["error",3],["versionedslate",4]]],[[],[["result",4],["boundmethod",3],["argserializeerror",3]]],[[],[["argserializeerror",3],["boundmethod",3],["result",4]]],[[["blockfees",3]],[["argserializeerror",3],["result",4],["boundmethod",3]]],[[["versionedslate",4]],[["boundmethod",3],["argserializeerror",3],["result",4]]],[[["versionedslate",4],["string",3],["option",4]],[["boundmethod",3],["argserializeerror",3],["result",4]]],[[["versionedslate",4]],[["boundmethod",3],["argserializeerror",3],["result",4]]],[[["string",3]],[["boundmethod",3],["argserializeerror",3],["result",4]]],[[["string",3]],[["argserializeerror",3],["boundmethod",3],["result",4]]],[[["sender",3],["mutex",6],["option",4],["arc",3],["option",4],["torconfig",3]]],[[["option",4],["torconfig",3]]],[[["option",4],["secretkey",3]],[["error",3],["vec",3],["result",4]]],[[["option",4],["secretkey",3],["str",15]],[["result",4],["identifier",3],["error",3]]],[[["option",4],["secretkey",3],["str",15]],[["result",4],["error",3]]],[[["u32",15],["secretkey",3],["option",4],["option",4],["bool",15]],[["result",4],["error",3]]],[[["u32",15],["secretkey",3],["option",4],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["error",3]]],[[["secretkey",3],["u64",15],["option",4],["bool",15]],[["error",3],["result",4]]],[[["usize",15],["secretkey",3],["inittxargs",3],["option",4]],[["slate",3],["error",3],["result",4]]],[[["option",4],["secretkey",3],["issueinvoicetxargs",3]],[["slate",3],["error",3],["result",4]]],[[["secretkey",3],["inittxargs",3],["slate",3],["option",4]],[["slate",3],["error",3],["result",4]]],[[["usize",15],["secretkey",3],["slate",3],["option",4],["string",3],["option",4]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["slate",3]],[["slate",3],["error",3],["result",4]]],[[["secretkey",3],["option",4],["transaction",3],["bool",15]],[["result",4],["error",3]]],[[["u32",15],["secretkey",3],["option",4],["option",4],["option",4],["uuid",3]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["txlogentry",3]],[["result",4],["error",3],["option",4]]],[[["string",3]],[["result",4],["error",3],["transaction",3]]],[[["option",4],["secretkey",3],["slate",3]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["u64",15],["option",4],["bool",15]],[["result",4],["error",3]]],[[["string",3],["option",4]],[["result",4],["error",3]]],[[["option",4],["secretkey",3]],[["error",3],["result",4],["nodeheightresult",3]]],[[],[["result",4],["string",3],["error",3]]],[[["str",15]],[["result",4],["error",3]]],[[["option",4],["option",4],["option",4],["mqsconfig",3],["loggingconfig",3],["walletconfig",3],["option",4],["chaintypes",4],["torconfig",3]],[["result",4],["error",3]]],[[["zeroingstring",3],["u32",15],["option",4],["option",4],["str",15]],[["result",4],["error",3]]],[[["bool",15],["option",4],["zeroingstring",3],["str",15]],[["option",4],["result",4],["error",3]]],[[["option",4],["str",15]],[["result",4],["error",3]]],[[["option",4],["zeroingstring",3],["str",15]],[["error",3],["zeroingstring",3],["result",4]]],[[["option",4],["zeroingstring",3],["str",15]],[["result",4],["error",3]]],[[["option",4],["str",15]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["duration",3]],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[["usize",15]],[["vec",3],["error",3],["result",4]]],[[["option",4],["secretkey",3]],[["publickey",3],["result",4],["error",3]]],[[["option",4],["secretkey",3]],[["result",4],["error",3],["dalekpublickey",3]]],[[["u32",15],["secretkey",3],["option",4],["option",4],["bool",15],["option",4],["uuid",3]],[["result",4],["paymentproof",3],["error",3]]],[[["u32",15],["secretkey",3],["option",4],["option",4]],[["result",4],["error",3],["txproof",3]]],[[["option",4],["secretkey",3],["paymentproof",3]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["swapstartargs",3]],[["result",4],["string",3],["error",3]]],[[["option",4],["secretkey",3],["string",3]],[["result",4],["string",3],["error",3]]],[[["option",4],["secretkey",3],["bool",15]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["string",3]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["string",3]],[["error",3],["result",4],["swap",3]]],[[["secretkey",3],["f32",15],["option",4],["string",3],["option",4],["option",4]],[["result",4],["error",3]]],[[["option",4],["secretkey",3],["string",3]],[["result",4],["string",3],["error",3]]],[[["secretkey",3],["option",4],["string",3],["option",4]],[["result",4],["error",3]]],[[["secretkey",3],["option",4],["string",3],["option",4]],[["swaptransactionsconfirmations",3],["result",4],["error",3]]],[[["secretkey",3],["string",3],["option",4],["str",15],["f32",15],["option",4],["option",4]],[["error",3],["result",4]]],[[["option",4],["secretkey",3],["string",3]],[["result",4],["option",4],["error",3]]],[[["option",4],["secretkey",3],["versionedslate",4]],[["result",4],["error",3]]],[[["u32",15],["secretkey",3],["versionedslate",4],["option",4],["option",4]],[["result",4],["error",3]]],[[["u32",15],["secretkey",3],["slate",3],["option",4],["bool",15],["option",4],["slateversion",4],["option",4],["option",4],["slatepurpose",4],["dalekpublickey",3]],[["result",4],["error",3],["versionedslate",4]]],[[["value",4],["secretkey",3],["jsonid",4]],[["result",4],["error",3]]],[[],[["error",3],["value",4],["result",4]]],[[],[["result",4],["string",3],["error",3]]],[[["secretkey",3]],[["error",3],["value",4],["result",4]]],[[["value",4],["secretkey",3],["jsonid",4]],[["result",4],["error",3]]],[[],[["error",3],["value",4],["result",4]]],[[],[["result",4],["string",3],["error",3]]],[[["secretkey",3]],[["error",3],["value",4],["result",4]]],[[["i32",15],["str",15],["u64",15]]],[[],["value",4]]],"p":[[3,"Foreign"],[4,"ForeignCheckMiddlewareFn"],[8,"ForeignRpc"],[3,"Owner"],[8,"OwnerRpcV2"],[8,"OwnerRpcV3"],[3,"ECDHPubkey"],[3,"EncryptedRequest"],[3,"EncryptedResponse"],[3,"EncryptionErrorResponse"],[4,"JsonId"],[3,"PubAddress"],[3,"Token"],[4,"foreign_rpc_client"]]}\
}');
initSearch(searchIndex);