var searchIndex = JSON.parse('{\
"grin_wallet_api":{"doc":"Higher level wallet functions which can be used by …","i":[[3,"Foreign","grin_wallet_api","Main interface into all wallet API functions. Wallet APIs …",null,null],[12,"wallet_inst","","Wallet instance",0,null],[12,"doctest_mode","","Flag to normalize some output during testing. Can mostly …",0,null],[6,"ForeignCheckMiddleware","","ForeignAPI Middleware Check callback",null,null],[4,"ForeignCheckMiddlewareFn","","Middleware Identifiers for each function",null,null],[13,"CheckVersion","","check_version",1,null],[13,"BuildCoinbase","","build_coinbase",1,null],[13,"VerifySlateMessages","","verify_slate_messages",1,null],[13,"ReceiveTx","","receive_tx",1,null],[13,"FinalizeInvoiceTx","","finalize_invoice_tx",1,null],[8,"ForeignRpc","","Public definition used to generate Foreign jsonrpc api.",null,null],[10,"check_version","","Networked version of Foreign::check_version.",2,[[],[["result",4],["errorkind",4],["versioninfo",3]]]],[10,"get_proof_address","","Networked version of Foreign::check_version.",2,[[],[["string",3],["errorkind",4],["result",4]]]],[10,"build_coinbase","","Networked Legacy (non-secure token) version of …",2,[[["blockfees",3]],[["errorkind",4],["versionedcoinbase",4],["result",4]]]],[10,"verify_slate_messages","","Networked version of Foreign::verify_slate_messages.",2,[[["versionedslate",4]],[["errorkind",4],["result",4]]]],[10,"receive_tx","","Networked version of Foreign::receive_tx.",2,[[["versionedslate",4],["option",4],["string",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"finalize_invoice_tx","","Networked version of Foreign::finalize_invoice_tx.",2,[[["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"receive_swap_message","","Networked version of Foreign::receive_swap_message.",2,[[["string",3]],[["errorkind",4],["result",4]]]],[3,"Owner","","Main interface into all wallet API functions. Wallet APIs …",null,null],[12,"wallet_inst","","contain all methods to manage the wallet",3,null],[12,"doctest_mode","","Flag to normalize some output during testing. Can mostly …",3,null],[12,"shared_key","","Share ECDH key",3,null],[12,"updater_running","","Stop state for update thread",3,null],[8,"OwnerRpcV2","","Public definition used to generate Owner jsonrpc api.",null,null],[10,"accounts","","Networked version of Owner::accounts.",4,[[],[["errorkind",4],["result",4],["vec",3]]]],[10,"create_account_path","","Networked version of Owner::create_account_path.",4,[[["string",3]],[["errorkind",4],["identifier",3],["result",4]]]],[10,"set_active_account","","Networked version of Owner::set_active_account.",4,[[["string",3]],[["errorkind",4],["result",4]]]],[10,"retrieve_outputs","","Networked version of Owner::retrieve_outputs.",4,[[["bool",15],["u32",15],["option",4]],[["errorkind",4],["result",4]]]],[10,"retrieve_txs","","Networked version of Owner::retrieve_txs.",4,[[["u32",15],["uuid",3],["option",4],["option",4],["bool",15]],[["errorkind",4],["result",4]]]],[10,"retrieve_summary_info","","Networked version of Owner::retrieve_summary_info.",4,[[["bool",15],["u64",15]],[["errorkind",4],["result",4]]]],[10,"init_send_tx","","Networked version of Owner::init_send_tx.",4,[[["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"issue_invoice_tx","","Networked version of Owner::issue_invoice_tx.",4,[[["issueinvoicetxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"process_invoice_tx","","Networked version of Owner::process_invoice_tx.",4,[[["versionedslate",4],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"tx_lock_outputs","","Networked version of Owner::tx_lock_outputs.",4,[[["usize",15],["versionedslate",4]],[["errorkind",4],["result",4]]]],[10,"finalize_tx","","Networked version of Owner::finalize_tx.",4,[[["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"post_tx","","Networked version of Owner::post_tx.",4,[[["transactionv3",3],["bool",15]],[["errorkind",4],["result",4]]]],[10,"cancel_tx","","Networked version of Owner::cancel_tx.",4,[[["u32",15],["uuid",3],["option",4],["option",4]],[["errorkind",4],["result",4]]]],[10,"get_stored_tx","","Networked version of Owner::get_stored_tx.",4,[[["txlogentryapi",3]],[["result",4],["option",4],["errorkind",4]]]],[10,"verify_slate_messages","","Networked version of Owner::verify_slate_messages.",4,[[["versionedslate",4]],[["errorkind",4],["result",4]]]],[10,"scan","","Networked version of Owner::scan.",4,[[["bool",15],["option",4],["u64",15]],[["errorkind",4],["result",4]]]],[10,"node_height","","Networked version of Owner::node_height.",4,[[],[["errorkind",4],["nodeheightresult",3],["result",4]]]],[10,"start_updater","","Networked version of Owner::start_updated.",4,[[["u32",15]],[["errorkind",4],["result",4]]]],[10,"stop_updater","","Networked version of Owner::stop_updater.",4,[[],[["errorkind",4],["result",4]]]],[10,"get_updater_messages","","Networked version of Owner::get_updater_messages.",4,[[["u32",15]],[["errorkind",4],["result",4],["vec",3]]]],[10,"get_mqs_address","","Networked version of Owner::get_mqs_address.",4,[[],[["provableaddress",3],["errorkind",4],["result",4]]]],[10,"get_wallet_public_address","","Networked version of Owner::get_wallet_public_address.",4,[[],[["provableaddress",3],["errorkind",4],["result",4]]]],[10,"retrieve_payment_proof","","Networked version of Owner::retrieve_payment_proof.",4,[[["u32",15],["uuid",3],["option",4],["option",4],["bool",15]],[["result",4],["errorkind",4],["paymentproof",3]]]],[10,"verify_payment_proof","","Networked version of Owner::verify_payment_proof.",4,[[["paymentproof",3]],[["errorkind",4],["result",4]]]],[10,"encode_slatepack_message","","Networked version of Owner::encode_slatepack_message.",4,[[["u32",15],["versionedslate",4],["option",4],["provableaddress",3],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]]],[10,"decode_slatepack_message","","Networked version of Owner::decode_slatepack_message.",4,[[["u32",15],["option",4],["string",3]],[["errorkind",4],["result",4],["slatepackinfo",3]]]],[8,"OwnerRpcV3","","Public definition used to generate Owner jsonrpc api. …",null,null],[10,"accounts","","Networked version of Owner::accounts.",5,[[["token",3]],[["errorkind",4],["result",4],["vec",3]]]],[10,"create_account_path","","Networked version of Owner::create_account_path.",5,[[["token",3],["string",3]],[["errorkind",4],["identifier",3],["result",4]]]],[10,"set_active_account","","Networked version of Owner::set_active_account.",5,[[["token",3],["string",3]],[["errorkind",4],["result",4]]]],[10,"retrieve_outputs","","Networked version of Owner::retrieve_outputs.",5,[[["u32",15],["token",3],["option",4],["bool",15]],[["errorkind",4],["result",4]]]],[10,"retrieve_txs","","Networked version of Owner::retrieve_txs.",5,[[["u32",15],["token",3],["option",4],["uuid",3],["bool",15],["option",4]],[["errorkind",4],["result",4]]]],[10,"retrieve_summary_info","","Networked version of Owner::retrieve_summary_info.",5,[[["bool",15],["token",3],["u64",15]],[["errorkind",4],["result",4]]]],[10,"init_send_tx","","Networked version of Owner::init_send_tx.",5,[[["token",3],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"issue_invoice_tx","","Networked version of Owner::issue_invoice_tx.",5,[[["token",3],["issueinvoicetxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"process_invoice_tx","","Networked version of Owner::process_invoice_tx.",5,[[["token",3],["versionedslate",4],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"tx_lock_outputs","","Networked version of Owner::tx_lock_outputs.",5,[[["usize",15],["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]]],[10,"finalize_tx","","Networked version of Owner::finalize_tx.",5,[[["token",3],["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[10,"post_tx","","Networked version of Owner::post_tx.",5,[[["transactionv3",3],["token",3],["bool",15]],[["errorkind",4],["result",4]]]],[10,"cancel_tx","","Networked version of Owner::cancel_tx.",5,[[["u32",15],["token",3],["option",4],["uuid",3],["option",4]],[["errorkind",4],["result",4]]]],[10,"get_stored_tx","","Networked version of Owner::get_stored_tx.",5,[[["token",3],["txlogentryapi",3]],[["result",4],["option",4],["errorkind",4]]]],[10,"verify_slate_messages","","Networked version of Owner::verify_slate_messages.",5,[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]]],[10,"scan","","Networked version of Owner::scan.",5,[[["token",3],["option",4],["u64",15],["bool",15]],[["errorkind",4],["result",4]]]],[10,"node_height","","Networked version of Owner::node_height.",5,[[["token",3]],[["errorkind",4],["nodeheightresult",3],["result",4]]]],[10,"init_secure_api","","Initializes the secure JSON-RPC API. This function must …",5,[[["ecdhpubkey",3]],[["result",4],["errorkind",4],["ecdhpubkey",3]]]],[10,"get_top_level_directory","","Networked version of Owner::get_top_level_directory.",5,[[],[["string",3],["errorkind",4],["result",4]]]],[10,"set_top_level_directory","","Networked version of Owner::set_top_level_directory.",5,[[["string",3]],[["errorkind",4],["result",4]]]],[10,"create_config","","Networked version of Owner::create_config.",5,[[["option",4],["walletconfig",3],["option",4],["option",4],["loggingconfig",3],["option",4],["chaintypes",4],["torconfig",3],["mqsconfig",3]],[["errorkind",4],["result",4]]]],[10,"create_wallet","","Networked version of Owner::create_wallet.",5,[[["u32",15],["option",4],["string",3]],[["errorkind",4],["result",4]]]],[10,"open_wallet","","Networked version of Owner::open_wallet.",5,[[["option",4],["string",3]],[["errorkind",4],["token",3],["result",4]]]],[10,"close_wallet","","Networked version of Owner::close_wallet.",5,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[10,"get_mnemonic","","Networked version of Owner::get_mnemonic.",5,[[["option",4],["string",3]],[["string",3],["errorkind",4],["result",4]]]],[10,"change_password","","Networked version of Owner::change_password.",5,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[10,"delete_wallet","","Networked version of Owner::delete_wallet.",5,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[10,"start_updater","","Networked version of Owner::start_updated.",5,[[["u32",15],["token",3]],[["errorkind",4],["result",4]]]],[10,"stop_updater","","Networked version of Owner::stop_updater.",5,[[],[["errorkind",4],["result",4]]]],[10,"get_updater_messages","","Networked version of Owner::get_updater_messages.",5,[[["u32",15]],[["errorkind",4],["result",4],["vec",3]]]],[10,"get_mqs_address","","Networked version of Owner::get_mqs_address.",5,[[["token",3]],[["provableaddress",3],["errorkind",4],["result",4]]]],[10,"get_wallet_public_address","","Networked version of Owner::get_wallet_public_address.",5,[[["token",3]],[["provableaddress",3],["errorkind",4],["result",4]]]],[10,"retrieve_payment_proof","","Networked version of Owner::retrieve_payment_proof.",5,[[["u32",15],["token",3],["option",4],["uuid",3],["bool",15],["option",4]],[["result",4],["errorkind",4],["paymentproof",3]]]],[10,"verify_payment_proof","","Networked version of Owner::verify_payment_proof.",5,[[["token",3],["paymentproof",3]],[["errorkind",4],["result",4]]]],[10,"set_tor_config","","Networked version of Owner::set_tor_config.",5,[[["option",4],["torconfig",3]],[["errorkind",4],["result",4]]]],[10,"encode_slatepack_message","","Networked version of Owner::encode_slatepack_message.",5,[[["u32",15],["token",3],["versionedslate",4],["provableaddress",3],["slatepurpose",4],["option",4],["option",4]],[["string",3],["errorkind",4],["result",4]]]],[10,"decode_slatepack_message","","Networked version of Owner::decode_slatepack_message.",5,[[["u32",15],["token",3],["option",4],["string",3]],[["errorkind",4],["result",4],["slatepackinfo",3]]]],[4,"foreign_rpc_client","","Helper module for jsonrpc clients. Automatically …",null,null],[5,"run_doctest_foreign","","helper to set up a real environment to run integrated …",null,[[["u64",15],["bool",15],["value",4],["str",15]],[["result",4],["option",4],["string",3]]]],[5,"run_doctest_owner","","helper to set up a real environment to run integrated …",null,[[["u64",15],["bool",15],["value",4],["str",15]],[["result",4],["option",4],["string",3]]]],[3,"ECDHPubkey","","Wrapper for ECDH Public keys",null,null],[12,"ecdh_pubkey","","public key, flattened",6,null],[3,"EncryptedRequest","","Wrapper for secure JSON requests",null,null],[12,"jsonrpc","","JSON RPC response",7,null],[12,"method","","method",7,null],[12,"id","","id",7,null],[12,"params","","Body params, which includes nonce and encrypted request",7,null],[3,"EncryptedResponse","","Wrapper for secure JSON requests",null,null],[12,"jsonrpc","","JSON RPC response",8,null],[12,"id","","id",8,null],[12,"result","","result",8,null],[3,"EncryptionErrorResponse","","Wrapper for encryption error responses",null,null],[12,"jsonrpc","","JSON RPC response",9,null],[12,"id","","id",9,null],[12,"error","","error",9,null],[4,"JsonId","","Represents a compliant JSON RPC 2.0 id. Valid id: …",null,null],[13,"IntId","","Integer Id",10,null],[13,"StrId","","String Id",10,null],[3,"PubAddress","","Wrapper for dalek public keys, used as addresses",null,null],[12,"address","","Public address",11,null],[3,"Token","","Wrapper for API Tokens",null,null],[12,"keychain_mask","","Token to XOR mask against the stored wallet seed",12,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow_replacement","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"try_into","","",1,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow_replacement","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"try_into","","",0,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow_replacement","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"try_into","","",13,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow_replacement","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"try_into","","",3,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow_replacement","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",10,[[]]],[11,"clone_boxed","","",10,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"clone_any","","",10,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",10,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",10,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",10,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"try_into","","",10,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow_replacement","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",12,[[]]],[11,"clone_boxed","","",12,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"clone_any","","",12,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",12,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",12,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",12,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"try_into","","",12,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow_replacement","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",11,[[]]],[11,"clone_boxed","","",11,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"clone_any","","",11,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",11,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",11,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",11,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"try_into","","",11,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow_replacement","","",6,[[]]],[11,"clone_boxed","","",6,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",6,[[]]],[11,"clone_boxed","","",6,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"clone_any","","",6,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",6,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",6,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",6,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"try_into","","",6,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow_replacement","","",7,[[]]],[11,"clone_boxed","","",7,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",7,[[]]],[11,"clone_boxed","","",7,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"clone_any","","",7,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",7,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",7,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",7,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"try_into","","",7,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow_replacement","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",8,[[]]],[11,"clone_boxed","","",8,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"clone_any","","",8,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",8,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",8,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",8,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"try_into","","",8,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow_replacement","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["defaultfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",9,[[]]],[11,"clone_boxed","","",9,[[],[["nonsyncfeatures",8],["global",3],["box",3]]]],[11,"self_address_mut","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"clone_any","","",9,[[],[["global",3],["box",3],["cloneany",8]]]],[11,"clone_any_send","","",9,[[],[["box",3],["cloneany",8],["global",3]]]],[11,"clone_any_sync","","",9,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"clone_any_send_sync","","",9,[[],[["cloneany",8],["box",3],["global",3]]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"try_into","","",9,[[],["result",4]]],[11,"check_version","","",0,[[],[["result",4],["errorkind",4],["versioninfo",3]]]],[11,"get_proof_address","","",0,[[],[["string",3],["errorkind",4],["result",4]]]],[11,"build_coinbase","","",0,[[["blockfees",3]],[["errorkind",4],["versionedcoinbase",4],["result",4]]]],[11,"verify_slate_messages","","",0,[[["versionedslate",4]],[["errorkind",4],["result",4]]]],[11,"receive_tx","","",0,[[["versionedslate",4],["option",4],["string",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"finalize_invoice_tx","","",0,[[["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"receive_swap_message","","",0,[[["string",3]],[["errorkind",4],["result",4]]]],[11,"accounts","","",3,[[],[["errorkind",4],["result",4],["vec",3]]]],[11,"create_account_path","","",3,[[["string",3]],[["errorkind",4],["identifier",3],["result",4]]]],[11,"set_active_account","","",3,[[["string",3]],[["errorkind",4],["result",4]]]],[11,"retrieve_outputs","","",3,[[["bool",15],["u32",15],["option",4]],[["errorkind",4],["result",4]]]],[11,"retrieve_txs","","",3,[[["u32",15],["uuid",3],["option",4],["option",4],["bool",15]],[["errorkind",4],["result",4]]]],[11,"retrieve_summary_info","","",3,[[["bool",15],["u64",15]],[["errorkind",4],["result",4]]]],[11,"init_send_tx","","",3,[[["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"issue_invoice_tx","","",3,[[["issueinvoicetxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"process_invoice_tx","","",3,[[["versionedslate",4],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"finalize_tx","","",3,[[["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"tx_lock_outputs","","",3,[[["usize",15],["versionedslate",4]],[["errorkind",4],["result",4]]]],[11,"cancel_tx","","",3,[[["u32",15],["uuid",3],["option",4],["option",4]],[["errorkind",4],["result",4]]]],[11,"get_stored_tx","","",3,[[["txlogentryapi",3]],[["result",4],["option",4],["errorkind",4]]]],[11,"post_tx","","",3,[[["transactionv3",3],["bool",15]],[["errorkind",4],["result",4]]]],[11,"verify_slate_messages","","",3,[[["versionedslate",4]],[["errorkind",4],["result",4]]]],[11,"scan","","",3,[[["bool",15],["option",4],["u64",15]],[["errorkind",4],["result",4]]]],[11,"node_height","","",3,[[],[["errorkind",4],["nodeheightresult",3],["result",4]]]],[11,"start_updater","","",3,[[["u32",15]],[["errorkind",4],["result",4]]]],[11,"stop_updater","","",3,[[],[["errorkind",4],["result",4]]]],[11,"get_updater_messages","","",3,[[["u32",15]],[["errorkind",4],["result",4],["vec",3]]]],[11,"get_mqs_address","","",3,[[],[["provableaddress",3],["errorkind",4],["result",4]]]],[11,"get_wallet_public_address","","",3,[[],[["provableaddress",3],["errorkind",4],["result",4]]]],[11,"retrieve_payment_proof","","",3,[[["u32",15],["uuid",3],["option",4],["option",4],["bool",15]],[["result",4],["errorkind",4],["paymentproof",3]]]],[11,"verify_payment_proof","","",3,[[["paymentproof",3]],[["errorkind",4],["result",4]]]],[11,"encode_slatepack_message","","",3,[[["u32",15],["versionedslate",4],["option",4],["provableaddress",3],["slatepurpose",4],["option",4]],[["string",3],["errorkind",4],["result",4]]]],[11,"decode_slatepack_message","","",3,[[["u32",15],["option",4],["string",3]],[["errorkind",4],["result",4],["slatepackinfo",3]]]],[11,"accounts","","",3,[[["token",3]],[["errorkind",4],["result",4],["vec",3]]]],[11,"create_account_path","","",3,[[["token",3],["string",3]],[["errorkind",4],["identifier",3],["result",4]]]],[11,"set_active_account","","",3,[[["token",3],["string",3]],[["errorkind",4],["result",4]]]],[11,"retrieve_outputs","","",3,[[["u32",15],["token",3],["option",4],["bool",15]],[["errorkind",4],["result",4]]]],[11,"retrieve_txs","","",3,[[["u32",15],["token",3],["option",4],["uuid",3],["bool",15],["option",4]],[["errorkind",4],["result",4]]]],[11,"retrieve_summary_info","","",3,[[["bool",15],["token",3],["u64",15]],[["errorkind",4],["result",4]]]],[11,"init_send_tx","","",3,[[["token",3],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"issue_invoice_tx","","",3,[[["token",3],["issueinvoicetxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"process_invoice_tx","","",3,[[["token",3],["versionedslate",4],["inittxargs",3]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"finalize_tx","","",3,[[["token",3],["versionedslate",4]],[["errorkind",4],["versionedslate",4],["result",4]]]],[11,"tx_lock_outputs","","",3,[[["usize",15],["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]]],[11,"cancel_tx","","",3,[[["u32",15],["token",3],["option",4],["uuid",3],["option",4]],[["errorkind",4],["result",4]]]],[11,"get_stored_tx","","",3,[[["token",3],["txlogentryapi",3]],[["result",4],["option",4],["errorkind",4]]]],[11,"post_tx","","",3,[[["transactionv3",3],["token",3],["bool",15]],[["errorkind",4],["result",4]]]],[11,"verify_slate_messages","","",3,[[["token",3],["versionedslate",4]],[["errorkind",4],["result",4]]]],[11,"scan","","",3,[[["token",3],["option",4],["u64",15],["bool",15]],[["errorkind",4],["result",4]]]],[11,"node_height","","",3,[[["token",3]],[["errorkind",4],["nodeheightresult",3],["result",4]]]],[11,"init_secure_api","","",3,[[["ecdhpubkey",3]],[["result",4],["errorkind",4],["ecdhpubkey",3]]]],[11,"get_top_level_directory","","",3,[[],[["string",3],["errorkind",4],["result",4]]]],[11,"set_top_level_directory","","",3,[[["string",3]],[["errorkind",4],["result",4]]]],[11,"create_config","","",3,[[["option",4],["walletconfig",3],["option",4],["option",4],["loggingconfig",3],["option",4],["chaintypes",4],["torconfig",3],["mqsconfig",3]],[["errorkind",4],["result",4]]]],[11,"create_wallet","","",3,[[["u32",15],["option",4],["string",3]],[["errorkind",4],["result",4]]]],[11,"open_wallet","","",3,[[["option",4],["string",3]],[["errorkind",4],["token",3],["result",4]]]],[11,"close_wallet","","",3,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[11,"get_mnemonic","","",3,[[["option",4],["string",3]],[["string",3],["errorkind",4],["result",4]]]],[11,"change_password","","",3,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[11,"delete_wallet","","",3,[[["option",4],["string",3]],[["errorkind",4],["result",4]]]],[11,"start_updater","","",3,[[["u32",15],["token",3]],[["errorkind",4],["result",4]]]],[11,"stop_updater","","",3,[[],[["errorkind",4],["result",4]]]],[11,"get_updater_messages","","",3,[[["u32",15]],[["errorkind",4],["result",4],["vec",3]]]],[11,"get_mqs_address","","",3,[[["token",3]],[["provableaddress",3],["errorkind",4],["result",4]]]],[11,"get_wallet_public_address","","",3,[[["token",3]],[["provableaddress",3],["errorkind",4],["result",4]]]],[11,"retrieve_payment_proof","","",3,[[["u32",15],["token",3],["option",4],["uuid",3],["bool",15],["option",4]],[["result",4],["errorkind",4],["paymentproof",3]]]],[11,"verify_payment_proof","","",3,[[["token",3],["paymentproof",3]],[["errorkind",4],["result",4]]]],[11,"set_tor_config","","",3,[[["option",4],["torconfig",3]],[["errorkind",4],["result",4]]]],[11,"encode_slatepack_message","","",3,[[["u32",15],["token",3],["versionedslate",4],["provableaddress",3],["slatepurpose",4],["option",4],["option",4]],[["string",3],["errorkind",4],["result",4]]]],[11,"decode_slatepack_message","","",3,[[["u32",15],["token",3],["option",4],["string",3]],[["errorkind",4],["result",4],["slatepackinfo",3]]]],[11,"drop","","We have a start_updater_log_thread running in the …",3,[[]]],[11,"clone","","",10,[[],["jsonid",4]]],[11,"clone","","",12,[[],["token",3]]],[11,"clone","","",11,[[],["pubaddress",3]]],[11,"clone","","",6,[[],["ecdhpubkey",3]]],[11,"clone","","",7,[[],["encryptedrequest",3]]],[11,"clone","","",8,[[],["encryptedresponse",3]]],[11,"clone","","",9,[[],["encryptionerrorresponse",3]]],[11,"eq","","",10,[[["jsonid",4]],["bool",15]]],[11,"ne","","",10,[[["jsonid",4]],["bool",15]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"handle","","",2,[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]]],[11,"handle","","",4,[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]]],[11,"handle","","",5,[[["params",4],["str",15]],[["error",3],["result",4],["value",4]]]],[11,"new","","Create a new API instance with the given wallet instance. …",0,[[["mutex",6],["foreigncheckmiddleware",6],["arc",3],["option",4],["secretkey",3],["option",4]]]],[11,"check_version","","Return the version capabilities of the running ForeignApi …",0,[[],[["error",3],["result",4],["versioninfo",3]]]],[11,"get_proof_address","","Return the tor proof address",0,[[],[["error",3],["result",4],["string",3]]]],[11,"build_coinbase","","Builds a new unconfirmed coinbase output in the wallet, …",0,[[["blockfees",3]],[["cbdata",3],["result",4],["error",3]]]],[11,"verify_slate_messages","","Verifies all messages in the slate match their public …",0,[[["slate",3]],[["result",4],["error",3]]]],[11,"receive_tx","","Recieve a tranaction created by another party, returning …",0,[[["slate",3],["option",4],["str",15],["option",4],["string",3]],[["result",4],["slate",3],["error",3]]]],[11,"finalize_invoice_tx","","Finalizes an invoice transaction initiated by this …",0,[[["slate",3]],[["result",4],["slate",3],["error",3]]]],[11,"receive_swap_message","","",0,[[["string",3]],[["result",4],["error",3]]]],[11,"decrypt_slate","","",0,[[["versionedslate",4]],[["result",4],["error",3]]]],[11,"encrypt_slate","","",0,[[["option",4],["u32",15],["option",4],["option",4],["slateversion",4],["slatepurpose",4],["bool",15],["dalekpublickey",3],["slate",3]],[["result",4],["versionedslate",4],["error",3]]]],[11,"check_version","","Request generator for jsonrpc clients. Automatically …",13,[[],[["result",4],["boundmethod",3],["argserializeerror",3]]]],[11,"get_proof_address","","Request generator for jsonrpc clients. Automatically …",13,[[],[["argserializeerror",3],["boundmethod",3],["result",4]]]],[11,"build_coinbase","","Request generator for jsonrpc clients. Automatically …",13,[[["blockfees",3]],[["argserializeerror",3],["result",4],["boundmethod",3]]]],[11,"verify_slate_messages","","Request generator for jsonrpc clients. Automatically …",13,[[["versionedslate",4]],[["argserializeerror",3],["boundmethod",3],["result",4]]]],[11,"receive_tx","","Request generator for jsonrpc clients. Automatically …",13,[[["versionedslate",4],["option",4],["string",3]],[["argserializeerror",3],["boundmethod",3],["result",4]]]],[11,"finalize_invoice_tx","","Request generator for jsonrpc clients. Automatically …",13,[[["versionedslate",4]],[["argserializeerror",3],["boundmethod",3],["result",4]]]],[11,"receive_swap_message","","Request generator for jsonrpc clients. Automatically …",13,[[["string",3]],[["argserializeerror",3],["boundmethod",3],["result",4]]]],[11,"new","","Create a new API instance with the given wallet instance. …",3,[[["sender",3],["arc",3],["mutex",6],["option",4],["option",4],["torconfig",3]]]],[11,"set_tor_config","","Set the TOR configuration for this instance of the …",3,[[["option",4],["torconfig",3]]]],[11,"accounts","","Returns a list of accounts stored in the wallet (i.e. …",3,[[["option",4],["secretkey",3]],[["result",4],["vec",3],["error",3]]]],[11,"create_account_path","","Creates a new \'account\', which is a mapping of a …",3,[[["option",4],["secretkey",3],["str",15]],[["result",4],["identifier",3],["error",3]]]],[11,"set_active_account","","Sets the wallet\'s currently active account. This sets the …",3,[[["option",4],["secretkey",3],["str",15]],[["result",4],["error",3]]]],[11,"retrieve_outputs","","Returns a list of outputs from the active account in the …",3,[[["u32",15],["option",4],["secretkey",3],["option",4],["bool",15]],[["result",4],["error",3]]]],[11,"retrieve_txs","","Returns a list of Transaction Log Entries from the active …",3,[[["u32",15],["option",4],["secretkey",3],["option",4],["bool",15],["uuid",3],["option",4]],[["result",4],["error",3]]]],[11,"retrieve_summary_info","","Returns summary information from the active account in …",3,[[["option",4],["secretkey",3],["u64",15],["bool",15]],[["result",4],["error",3]]]],[11,"init_send_tx","","Initiates a new transaction as the sender, creating a new …",3,[[["usize",15],["option",4],["secretkey",3],["inittxargs",3]],[["result",4],["slate",3],["error",3]]]],[11,"issue_invoice_tx","","Issues a new invoice transaction slate, essentially a …",3,[[["option",4],["secretkey",3],["issueinvoicetxargs",3]],[["result",4],["slate",3],["error",3]]]],[11,"process_invoice_tx","","Processes an invoice tranaction created by another party, …",3,[[["inittxargs",3],["option",4],["secretkey",3],["slate",3]],[["result",4],["slate",3],["error",3]]]],[11,"tx_lock_outputs","","Locks the outputs associated with the inputs to the …",3,[[["string",3],["option",4],["secretkey",3],["option",4],["usize",15],["slate",3]],[["result",4],["error",3]]]],[11,"finalize_tx","","Finalizes a transaction, after all parties have filled in …",3,[[["option",4],["secretkey",3],["slate",3]],[["result",4],["slate",3],["error",3]]]],[11,"post_tx","","Posts a completed transaction to the listening node for …",3,[[["option",4],["secretkey",3],["transaction",3],["bool",15]],[["result",4],["error",3]]]],[11,"cancel_tx","","Cancels a transaction. This entails:",3,[[["u32",15],["option",4],["secretkey",3],["option",4],["uuid",3],["option",4]],[["result",4],["error",3]]]],[11,"get_stored_tx","","Retrieves the stored transaction associated with a …",3,[[["option",4],["secretkey",3],["txlogentry",3]],[["option",4],["result",4],["error",3]]]],[11,"load_stored_tx","","Loads a stored transaction from a file",3,[[["string",3]],[["result",4],["error",3],["transaction",3]]]],[11,"verify_slate_messages","","Verifies all messages in the slate match their public …",3,[[["option",4],["secretkey",3],["slate",3]],[["result",4],["error",3]]]],[11,"scan","","Scans the entire UTXO set from the node, identify which …",3,[[["option",4],["secretkey",3],["option",4],["u64",15],["bool",15]],[["result",4],["error",3]]]],[11,"dump_wallet_data","","Dump wallet data (outputs,transactions) into the logs",3,[[["option",4],["string",3]],[["result",4],["error",3]]]],[11,"node_height","","Retrieves the last known height known by the wallet. This …",3,[[["option",4],["secretkey",3]],[["nodeheightresult",3],["result",4],["error",3]]]],[11,"get_top_level_directory","","Retrieve the top-level directory for the wallet. This …",3,[[],[["error",3],["result",4],["string",3]]]],[11,"set_top_level_directory","","Set the top-level directory for the wallet. This …",3,[[["str",15]],[["result",4],["error",3]]]],[11,"create_config","","Create a <code>mwc-wallet.toml</code> configuration file in the …",3,[[["option",4],["walletconfig",3],["option",4],["option",4],["loggingconfig",3],["chaintypes",4],["option",4],["torconfig",3],["mqsconfig",3]],[["result",4],["error",3]]]],[11,"create_wallet","","Creates a new wallet seed and empty wallet database in …",3,[[["u32",15],["zeroingstring",3],["option",4],["option",4],["str",15]],[["result",4],["error",3]]]],[11,"open_wallet","","<code>Opens</code> a wallet, populating the internal keychain with the …",3,[[["zeroingstring",3],["bool",15],["option",4],["str",15]],[["result",4],["error",3],["option",4]]]],[11,"close_wallet","","<code>Close</code> a wallet, removing the master seed from memory.",3,[[["option",4],["str",15]],[["result",4],["error",3]]]],[11,"get_mnemonic","","Return the BIP39 mnemonic for the given wallet. This …",3,[[["zeroingstring",3],["option",4],["str",15]],[["result",4],["error",3],["zeroingstring",3]]]],[11,"change_password","","Changes a wallet\'s password, meaning the old seed file is …",3,[[["zeroingstring",3],["option",4],["str",15]],[["result",4],["error",3]]]],[11,"delete_wallet","","Deletes a wallet, removing the config file, seed file and …",3,[[["option",4],["str",15]],[["result",4],["error",3]]]],[11,"start_updater","","Starts a background wallet update thread, which performs …",3,[[["duration",3],["option",4],["secretkey",3]],[["result",4],["error",3]]]],[11,"stop_updater","","Stops the background update thread. If the updater is …",3,[[],[["result",4],["error",3]]]],[11,"get_updater_messages","","Retrieve messages from the updater thread, up to <code>count</code> …",3,[[["usize",15]],[["result",4],["vec",3],["error",3]]]],[11,"get_mqs_address","","Retrieve the MQS address associated with the wallet. This …",3,[[["option",4],["secretkey",3]],[["result",4],["publickey",3],["error",3]]]],[11,"get_wallet_public_address","","Retrieve the Tor or wallet public address associated with …",3,[[["option",4],["secretkey",3]],[["dalekpublickey",3],["error",3],["result",4]]]],[11,"retrieve_payment_proof","","Returns a single, exportable PaymentProof from a …",3,[[["u32",15],["option",4],["secretkey",3],["option",4],["bool",15],["uuid",3],["option",4]],[["result",4],["error",3],["paymentproof",3]]]],[11,"get_stored_tx_proof","","",3,[[["u32",15],["option",4],["secretkey",3],["option",4]],[["error",3],["txproof",3],["result",4]]]],[11,"verify_payment_proof","","Verifies a PaymentProof This process entails:",3,[[["option",4],["secretkey",3],["paymentproof",3]],[["result",4],["error",3]]]],[11,"swap_start","","Start swap trade process. Return SwapID that can be used …",3,[[["swapstartargs",3],["option",4],["secretkey",3]],[["error",3],["result",4],["string",3]]]],[11,"swap_create_from_offer","","",3,[[["option",4],["secretkey",3],["string",3]],[["error",3],["result",4],["string",3]]]],[11,"swap_list","","List all available swap operations. SwapId & Status",3,[[["bool",15],["option",4],["secretkey",3]],[["error",3],["result",4],["vec",3]]]],[11,"swap_delete","","Delete swap trade",3,[[["option",4],["secretkey",3],["string",3]],[["result",4],["error",3]]]],[11,"swap_get","","Retrieve swap trade",3,[[["option",4],["secretkey",3],["string",3]],[["swap",3],["error",3],["result",4]]]],[11,"swap_adjust","","Adjust the sate of swap trade. method & destination …",3,[[["option",4],["secretkey",3],["option",4],["f32",15],["option",4],["string",3]],[["error",3],["result",4]]]],[11,"swap_dump","","Dump swap file content",3,[[["option",4],["secretkey",3],["string",3]],[["error",3],["result",4],["string",3]]]],[11,"update_swap_status_action","","Refresh and get a status and current expected action for …",3,[[["option",4],["secretkey",3],["option",4],["string",3]],[["result",4],["error",3]]]],[11,"get_swap_tx_tstatus","","Get a status of the transactions that involved into the …",3,[[["option",4],["secretkey",3],["option",4],["string",3]],[["swaptransactionsconfirmations",3],["error",3],["result",4]]]],[11,"swap_process","","",3,[[["option",4],["secretkey",3],["option",4],["option",4],["str",15],["f32",15],["string",3]],[["error",3],["stateprocessrespond",3],["result",4]]]],[11,"swap_income_message","","Process swap income message",3,[[["option",4],["secretkey",3],["string",3]],[["result",4],["option",4],["error",3]]]],[11,"decrypt_versioned_slate","","",3,[[["option",4],["secretkey",3],["versionedslate",4]],[["result",4],["error",3]]]],[11,"decrypt_slatepack","","",3,[[["u32",15],["option",4],["secretkey",3],["versionedslate",4],["option",4]],[["result",4],["error",3]]]],[11,"encrypt_slate","","",3,[[["option",4],["option",4],["secretkey",3],["slate",3],["slateversion",4],["slatepurpose",4],["u32",15],["option",4],["bool",15],["dalekpublickey",3],["option",4]],[["result",4],["versionedslate",4],["error",3]]]],[11,"from_json","","from json",7,[[["secretkey",3],["jsonid",4],["value",4]],[["result",4],["error",3]]]],[11,"as_json_value","","return serialize JSON self",7,[[],[["result",4],["error",3],["value",4]]]],[11,"as_json_str","","return serialized JSON self as string",7,[[],[["error",3],["result",4],["string",3]]]],[11,"decrypt","","Return decrypted body",7,[[["secretkey",3]],[["result",4],["error",3],["value",4]]]],[11,"from_json","","from json",8,[[["secretkey",3],["jsonid",4],["value",4]],[["result",4],["error",3]]]],[11,"as_json_value","","return serialize JSON self",8,[[],[["result",4],["error",3],["value",4]]]],[11,"as_json_str","","return serialized JSON self as string",8,[[],[["error",3],["result",4],["string",3]]]],[11,"decrypt","","Return decrypted body",8,[[["secretkey",3]],[["result",4],["error",3],["value",4]]]],[11,"new","","Create new response",9,[[["i32",15],["str",15],["u64",15]]]],[11,"as_json_value","","return serialized JSON self",9,[[],["value",4]]]],"p":[[3,"Foreign"],[4,"ForeignCheckMiddlewareFn"],[8,"ForeignRpc"],[3,"Owner"],[8,"OwnerRpcV2"],[8,"OwnerRpcV3"],[3,"ECDHPubkey"],[3,"EncryptedRequest"],[3,"EncryptedResponse"],[3,"EncryptionErrorResponse"],[4,"JsonId"],[3,"PubAddress"],[3,"Token"],[4,"foreign_rpc_client"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);